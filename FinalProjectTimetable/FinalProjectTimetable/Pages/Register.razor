@page "/register"
@using FinalProjectTimetable.FrontEndData
@using FinalProjectTimetable.Controllers
@inject LoginController controller
@inject NavigationManager NavManager
@inject NavigationManager NavigationManager

<h3>Register</h3>

<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Username</label>
        <InputText @bind-Value="model.Username" class="form-control" />
        <ValidationMessage For="@(() => model.Username)" />
    </div>
    <div class="form-group">
        <label>Password</label>
        <InputText @bind-Value="model.Password" type="password" class="form-control" />
        <ValidationMessage For="@(() => model.Password)" />
    </div>
    <button disabled="@loading" class="btn btn-primary">
        @if (loading)
        {
            <span class="spinner-border spinner-border-sm mr-1"></span>
        }
        Register
    </button>
    <NavLink href="account/login" class="btn btn-link">Cancel</NavLink>
</EditForm>

@code {
    private RegisterModel model = new RegisterModel();
    private bool loading;
    private async void OnValidSubmit()
    {
        loading = true;
        try
        {
            var test = controller.Register(model);
            //AlertService.Success("Registration successful", keepAfterRouteChange: true);
            //NavigationManager.NavigateTo("account/login");
        }
        catch (Exception ex)
        {
            loading = false;
            StateHasChanged();
        }
    }
}
